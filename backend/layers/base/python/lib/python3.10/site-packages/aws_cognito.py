"""
Utilities for interacting with aws cognito
"""
import os
from typing import Any, Dict

import boto3
from db_connector import CursorCommit, CursorRollback
from env_conf import cognito_client_id

client = boto3.client('cognito-idp', region_name= 'us-east-2')

def _mock_sign_up(user_uuid: str, body: Dict[str, Any]) -> Dict[str, Any]:
    with CursorCommit() as curs:
        query = """
            insert into public.mock_cognito
                (user_uuid, user_password, user_email, user_phone_number)
            values
                (%s, %s, %s, %s)
            """
        curs.execute(query,
            (user_uuid, body['password'], body['email'], body['phone number'])
        )

    return {
        'UserConfirmed': True,
        'UserSub': user_uuid,
        # Included because we will use auto-confirm
        'CodeDeliveryDetails': {
            'AttributeName': 'email',
            'DeliveryMedium': 'EMAIL',
            'Destination': body['email']
        }
    }


def cognito_sign_up(user_uuid: str, body: Dict[str, Any]) -> Dict[str, Any]:
    if os.environ.get("ENV") == "DEV":
        _mock_sign_up(user_uuid, body)

    return client.sign_up(
        ClientId=cognito_client_id,
        Username=user_uuid,
        Password=body["password"],
        UserAttributes=[
            {"Name": "email", "Value": body["email"]},
            {"Name": "phone_number", "Value": body.get("phone_number", "")},
        ]
    )
